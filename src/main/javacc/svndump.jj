options {
  STATIC = false;
}

PARSER_BEGIN(SvnDumpFileParser)
  package com.github.cstroe.svndumpgui.generated;

  import java.io.PrintStream;
  import java.io.IOException;
  import com.github.cstroe.svndumpgui.api.SvnDump;
  import com.github.cstroe.svndumpgui.api.SvnRevision;
  import com.github.cstroe.svndumpgui.internal.SvnRevisionImpl;
  import com.github.cstroe.svndumpgui.internal.SvnDumpImpl;
  import com.github.cstroe.svndumpgui.internal.SvnRevisionImpl;

  public class SvnDumpFileParser {
    public static void main(String[] args)
    throws ParseException, TokenMgrError {
      SvnDumpFileParser parser = new SvnDumpFileParser(System.in);
      parser.Start(System.out);
    }

    private void skipCharacters(int number) {
      for(int i = 0; i < number; i++) {
          try {
            token_source.input_stream.readChar();
          }
          catch(IOException ex) {}
      }
    }

  }
PARSER_END(SvnDumpFileParser)

//  Lexer

SKIP: { " " }
TOKEN: { <EOL: "\n" | "\r" | "\r\n"> }
TOKEN: { <NUMBER: (["0"-"9"])+> }
TOKEN: { <COLON: ":"> }
TOKEN: { <VERSION_KEY: "SVN-fs-dump-format-version"> }
TOKEN: { <UUID_KEY: "UUID"> }
TOKEN: { <UUID_VALUE: (["0"-"9","a"-"z","-"])+> }
TOKEN: { <REVISION_NUMBER_KEY: "Revision-number"> }
TOKEN: { <PROP_CONTENT_LENGTH_KEY: "Prop-content-length"> }
TOKEN: { <CONTENT_LENGTH_KEY: "Content-length"> }

// Parser

public SvnDump Start(PrintStream out):
{
  SvnDumpImpl dump = new SvnDumpImpl();
  Token dumpVersion;
  SvnRevision revision;
}
{
    <VERSION_KEY> <COLON> dumpVersion = <NUMBER> <EOL>
    <EOL>

    {
      out.print("Svn Dump Version: ");
      out.println(dumpVersion.image);
    }

    <UUID_KEY> <COLON> <UUID_VALUE> <EOL>
    <EOL>

    revision = Revision()
    { dump.addRevision(revision); }

    <EOF>

    { return dump; }
}

public SvnRevision Revision():
{
    SvnRevisionImpl revision;
    Token revisionNumber;
    Token contentLength;
}
{
    <REVISION_NUMBER_KEY> <COLON> revisionNumber = <NUMBER> <EOL>

    ( <PROP_CONTENT_LENGTH_KEY> <COLON> <NUMBER> <EOL> )?

    <CONTENT_LENGTH_KEY> <COLON> contentLength = <NUMBER> <EOL>
    <EOL>

    {
      revision = new SvnRevisionImpl(Integer.parseInt(revisionNumber.image));
      skipCharacters( Integer.parseInt(contentLength.image) );
    }
    <EOL>

    { return revision; }
}